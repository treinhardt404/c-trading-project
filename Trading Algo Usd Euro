strategy(title = "Regression-Strat", shorttitle="Reg-Strat", overlay=true,initial_capital = 1000, default_qty_value = 100, default_qty_type = strategy.percent_of_equity)
 
src = close
l1 = 10 #period 10 and 50 declaration
l2 = 50
 
lin1 = ta.linreg(close,l1,0)
lin2 = ta.linreg(close,l2,0)
slope1 = (lin1 - lin1[l1])/l1 #calculating slope of 10 period regression
slope2 = (lin2 - lin2[l2])/l2 #calculating slope of 50 period regression
 
above = ta.crossover(lin1,lin2) and slope1 < 0 and slope2 < 0 #determening when crossover of moving average occurs in positive/negative direction
below = ta.crossover(lin2,lin1) and slope1 > 0 and slope2 > 0 
 
trueRange = na(high[1])? high-low : math.max(math.max(high - low, math.abs(high - close[1])), math.abs(low - close[1]))
sensitivity = input(1.0,"Sensitivity")
atr = trueRange/sensitivity
 
short = below and ta.atr(10) >= atr #initializing both short and long parameters for implementation of arbitrage trade
long =  above and ta.atr(10) >= atr
 
p = input(50,"TP")
l = input(50,"SL")
Y = input(2021,"Year")
M = input(1,"Month")
D = input(1,"Day")
 
date = time >= timestamp(syminfo.timezone,Y,M,D,0,0)
 
strategy.entry("long",strategy.long, when = long and barstate.isconfirmed)
strategy.exit("exit","long",loss = l,profit = p)
 
strategy.entry("short",strategy.short, when = short and barstate.isconfirmed)
strategy.exit("exit","short",loss = l,profit = p)
